CREATE TABLE products (
    ->     product_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     product_name VARCHAR(255) NOT NULL,
    ->     product_category VARCHAR(255) NOT NULL,
    ->     product_price VARCHAR(10) NOT NULL,
    ->     product_quantity INT NOT NULL,
    ->     product_description TEXT,
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.07 sec)

mysql> CREATE TABLE product_images (
    ->     image_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     product_id INT,
    ->     image_url VARCHAR(255) NOT NULL,
    ->     FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE,
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );





CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255) UNIQUE,
    password VARCHAR(255),
    role VARCHAR(50),
    UNIQUE (email, user_id)
);





-- Create Orders table
CREATE TABLE Orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount DECIMAL(10, 2),
    status ENUM('pending', 'shipped', 'delivered') DEFAULT 'pending',
    payment_method VARCHAR(50),
    shipping_address TEXT,
    billing_address TEXT,
    shipping_method VARCHAR(50),
    tracking_number VARCHAR(50),
    notes TEXT,
    coupon_code VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create Order Details table
CREATE TABLE OrderDetails (
    order_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    unit_price DECIMAL(10, 2),
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);




 CREATE TABLE billing_details (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     user_id INT,
    ->     first_name VARCHAR(255),
    ->     last_name VARCHAR(255),
    ->     company_name VARCHAR(255),
    ->     address VARCHAR(255),
    ->     town_city VARCHAR(255),
    ->     country VARCHAR(255),
    ->     postcode VARCHAR(10),
    ->     mobile VARCHAR(20),
    ->     email VARCHAR(255),
    ->     notes TEXT,
    ->     FOREIGN KEY (user_id) REFERENCES users(user_id)
    -> );
